{
  "{\"sourceRoot\":\"/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics\",\"filename\":\"/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics",
      "filename": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/index.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  type Query {\\n    users(query: String): [User!]!\\n    posts(query: String): [Post!]!\\n    comments: [Comment!]!\\n    me: User!\\n    post: Post!\\n  }\\n\\n  type User {\\n    id: ID!\\n    name: String!\\n    email: String!\\n    age: Int\\n    posts: [Post!]!\\n    comments: [Comment]!\\n  }\\n\\n  type Post {\\n    id: ID!\\n    title: String!\\n    body: String!\\n    published: Boolean!\\n    author: User!\\n    comments: [Comment!]!\\n  }\\n\\n  type Comment {\\n    id: ID!\\n    body: String!\\n    author: User!\\n    post: Post!\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nvar _require = require(\"apollo-server\"),\n    ApolloServer = _require.ApolloServer,\n    gql = _require.gql; // DUMMY_DATA\n\n\nvar _users = [{\n  id: \"1\",\n  name: \"Joshua\",\n  email: \"joshua@example.com\",\n  age: 103\n}, {\n  id: \"2\",\n  name: \"Jerry\",\n  email: \"jerry@example.com\",\n  age: 35\n}, {\n  id: \"3\",\n  name: \"Sarah\",\n  email: \"sarah@example.com\",\n  age: 27\n}];\nvar _posts = [{\n  id: \"1\",\n  title: \"Secret first blog post... shhhhh\",\n  body: \"blablabla\",\n  published: true,\n  author: \"1\"\n}, {\n  id: \"2\",\n  title: \"Blog post the first\",\n  body: \"WAwawawawa\",\n  published: false,\n  author: \"1\"\n}, {\n  id: \"3\",\n  title: \"The second coming\",\n  body: \"WOOOOHOOOOOO!!!!!!!\",\n  published: true,\n  author: \"3\"\n}];\nvar _comments = [{\n  id: 1,\n  body: \"Yo, first comment!\",\n  author: \"1\",\n  post: \"1\"\n}, {\n  id: 2,\n  body: \"This is awesome\",\n  author: \"2\",\n  post: \"3\"\n}, {\n  id: 3,\n  body: \"What a time to be alive\",\n  author: \"2\",\n  post: \"3\"\n}, {\n  id: 4,\n  body: \"yo, lets have a party up in gere lol ;)\",\n  author: \"3\",\n  post: \"1\"\n}]; // The GraphQL schema\n\nvar typeDefs = gql(_templateObject()); // A map of functions which return data for the schema.\n\nvar resolvers = {\n  Query: {\n    users: function users(parent, args, ctx, info) {\n      if (!args.query) {\n        return _users;\n      }\n\n      return _users.filter(function (user) {\n        return user.name.toLowerCase().includes(args.query.toLowerCase());\n      });\n    },\n    posts: function posts(parent, args, ctx, info) {\n      if (!args.query) {\n        return _posts;\n      }\n\n      return _posts.filter(function (post) {\n        return post.title.toLowerCase().includes(args.query) || post.body.toLowerCase().includes(args.query);\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments;\n    },\n    me: function me() {\n      return {\n        id: \"123908\",\n        name: \"Mike\",\n        email: \"mike@example.com\"\n      };\n    },\n    post: function post() {\n      return {\n        id: \"123\",\n        title: \"How I fell in love with a gorilla\",\n        body: \"It was a cool night on the congo when my eyes locked with the beast...\",\n        published: false\n      };\n    }\n  },\n  Post: {\n    author: function author(parent, args, ctx, info) {\n      return _users.find(function (user) {\n        return user.id === parent.author;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (comment) {\n        return comment.post === parent.id;\n      });\n    }\n  },\n  User: {\n    posts: function posts(parent, args, ctx, info) {\n      return _posts.filter(function (post) {\n        return post.author === parent.id;\n      });\n    },\n    comments: function comments(parent, args, ctx, info) {\n      return _comments.filter(function (comment) {\n        return comment.author === parent.id;\n      });\n    }\n  },\n  Comment: {\n    author: function author(parent, args, ctx, info) {\n      return _users.find(function (user) {\n        return user.id === parent.author;\n      });\n    },\n    post: function post(parent, args, tx, info) {\n      return _posts.find(function (post) {\n        return post.id === parent.post;\n      });\n    }\n  }\n};\nvar server = new ApolloServer({\n  typeDefs: typeDefs,\n  resolvers: resolvers\n});\nserver.listen().then(function (_ref) {\n  var url = _ref.url;\n  console.log(\"\\uD83D\\uDE80 Server ready at \".concat(url));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "require",
        "ApolloServer",
        "gql",
        "users",
        "id",
        "name",
        "email",
        "age",
        "posts",
        "title",
        "body",
        "published",
        "author",
        "comments",
        "post",
        "typeDefs",
        "resolvers",
        "Query",
        "parent",
        "args",
        "ctx",
        "info",
        "query",
        "filter",
        "user",
        "toLowerCase",
        "includes",
        "me",
        "Post",
        "find",
        "comment",
        "User",
        "Comment",
        "tx",
        "server",
        "listen",
        "then",
        "url",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;;;;;;;;eAA8BA,OAAO,CAAC,eAAD,C;IAA7BC,Y,YAAAA,Y;IAAcC,G,YAAAA,G,EAEtB;;;AACA,IAAMC,MAAK,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,QAAjB;AAA2BC,EAAAA,KAAK,EAAE,oBAAlC;AAAwDC,EAAAA,GAAG,EAAE;AAA7D,CADY,EAEZ;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,KAAK,EAAE,mBAAjC;AAAsDC,EAAAA,GAAG,EAAE;AAA3D,CAFY,EAGZ;AAAEH,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE,OAAjB;AAA0BC,EAAAA,KAAK,EAAE,mBAAjC;AAAsDC,EAAAA,GAAG,EAAE;AAA3D,CAHY,CAAd;AAKA,IAAMC,MAAK,GAAG,CACZ;AACEJ,EAAAA,EAAE,EAAE,GADN;AAEEK,EAAAA,KAAK,EAAE,kCAFT;AAGEC,EAAAA,IAAI,EAAE,WAHR;AAIEC,EAAAA,SAAS,EAAE,IAJb;AAKEC,EAAAA,MAAM,EAAE;AALV,CADY,EAQZ;AACER,EAAAA,EAAE,EAAE,GADN;AAEEK,EAAAA,KAAK,EAAE,qBAFT;AAGEC,EAAAA,IAAI,EAAE,YAHR;AAIEC,EAAAA,SAAS,EAAE,KAJb;AAKEC,EAAAA,MAAM,EAAE;AALV,CARY,EAeZ;AACER,EAAAA,EAAE,EAAE,GADN;AAEEK,EAAAA,KAAK,EAAE,mBAFT;AAGEC,EAAAA,IAAI,EAAE,qBAHR;AAIEC,EAAAA,SAAS,EAAE,IAJb;AAKEC,EAAAA,MAAM,EAAE;AALV,CAfY,CAAd;AAwBA,IAAMC,SAAQ,GAAG,CACf;AAAET,EAAAA,EAAE,EAAE,CAAN;AAASM,EAAAA,IAAI,EAAE,oBAAf;AAAqCE,EAAAA,MAAM,EAAE,GAA7C;AAAkDE,EAAAA,IAAI,EAAE;AAAxD,CADe,EAEf;AAAEV,EAAAA,EAAE,EAAE,CAAN;AAASM,EAAAA,IAAI,EAAE,iBAAf;AAAkCE,EAAAA,MAAM,EAAE,GAA1C;AAA+CE,EAAAA,IAAI,EAAE;AAArD,CAFe,EAGf;AAAEV,EAAAA,EAAE,EAAE,CAAN;AAASM,EAAAA,IAAI,EAAE,yBAAf;AAA0CE,EAAAA,MAAM,EAAE,GAAlD;AAAuDE,EAAAA,IAAI,EAAE;AAA7D,CAHe,EAIf;AACEV,EAAAA,EAAE,EAAE,CADN;AAEEM,EAAAA,IAAI,EAAE,yCAFR;AAGEE,EAAAA,MAAM,EAAE,GAHV;AAIEE,EAAAA,IAAI,EAAE;AAJR,CAJe,CAAjB,C,CAYA;;AACA,IAAMC,QAAQ,GAAGb,GAAH,mBAAd,C,CAmCA;;AACA,IAAMc,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE;AACLd,IAAAA,KADK,iBACCe,MADD,EACSC,IADT,EACeC,GADf,EACoBC,IADpB,EAC0B;AAC7B,UAAI,CAACF,IAAI,CAACG,KAAV,EAAiB;AACf,eAAOnB,MAAP;AACD;;AACD,aAAOA,MAAK,CAACoB,MAAN,CAAa,UAACC,IAAD;AAAA,eAClBA,IAAI,CAACnB,IAAL,CAAUoB,WAAV,GAAwBC,QAAxB,CAAiCP,IAAI,CAACG,KAAL,CAAWG,WAAX,EAAjC,CADkB;AAAA,OAAb,CAAP;AAGD,KARI;AASLjB,IAAAA,KATK,iBASCU,MATD,EASSC,IATT,EASeC,GATf,EASoBC,IATpB,EAS0B;AAC7B,UAAI,CAACF,IAAI,CAACG,KAAV,EAAiB;AACf,eAAOd,MAAP;AACD;;AACD,aAAOA,MAAK,CAACe,MAAN,CACL,UAACT,IAAD;AAAA,eACEA,IAAI,CAACL,KAAL,CAAWgB,WAAX,GAAyBC,QAAzB,CAAkCP,IAAI,CAACG,KAAvC,KACAR,IAAI,CAACJ,IAAL,CAAUe,WAAV,GAAwBC,QAAxB,CAAiCP,IAAI,CAACG,KAAtC,CAFF;AAAA,OADK,CAAP;AAKD,KAlBI;AAmBLT,IAAAA,QAnBK,oBAmBIK,MAnBJ,EAmBYC,IAnBZ,EAmBkBC,GAnBlB,EAmBuBC,IAnBvB,EAmB6B;AAChC,aAAOR,SAAP;AACD,KArBI;AAsBLc,IAAAA,EAtBK,gBAsBA;AACH,aAAO;AACLvB,QAAAA,EAAE,EAAE,QADC;AAELC,QAAAA,IAAI,EAAE,MAFD;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KA5BI;AA6BLQ,IAAAA,IA7BK,kBA6BE;AACL,aAAO;AACLV,QAAAA,EAAE,EAAE,KADC;AAELK,QAAAA,KAAK,EAAE,mCAFF;AAGLC,QAAAA,IAAI,EACF,wEAJG;AAKLC,QAAAA,SAAS,EAAE;AALN,OAAP;AAOD;AArCI,GADS;AAwChBiB,EAAAA,IAAI,EAAE;AACJhB,IAAAA,MADI,kBACGM,MADH,EACWC,IADX,EACiBC,GADjB,EACsBC,IADtB,EAC4B;AAC9B,aAAOlB,MAAK,CAAC0B,IAAN,CAAW,UAACL,IAAD;AAAA,eAAUA,IAAI,CAACpB,EAAL,KAAYc,MAAM,CAACN,MAA7B;AAAA,OAAX,CAAP;AACD,KAHG;AAIJC,IAAAA,QAJI,oBAIKK,MAJL,EAIaC,IAJb,EAImBC,GAJnB,EAIwBC,IAJxB,EAI8B;AAChC,aAAOR,SAAQ,CAACU,MAAT,CAAgB,UAACO,OAAD;AAAA,eAAaA,OAAO,CAAChB,IAAR,KAAiBI,MAAM,CAACd,EAArC;AAAA,OAAhB,CAAP;AACD;AANG,GAxCU;AAgDhB2B,EAAAA,IAAI,EAAE;AACJvB,IAAAA,KADI,iBACEU,MADF,EACUC,IADV,EACgBC,GADhB,EACqBC,IADrB,EAC2B;AAC7B,aAAOb,MAAK,CAACe,MAAN,CAAa,UAACT,IAAD;AAAA,eAAUA,IAAI,CAACF,MAAL,KAAgBM,MAAM,CAACd,EAAjC;AAAA,OAAb,CAAP;AACD,KAHG;AAIJS,IAAAA,QAJI,oBAIKK,MAJL,EAIaC,IAJb,EAImBC,GAJnB,EAIwBC,IAJxB,EAI8B;AAChC,aAAOR,SAAQ,CAACU,MAAT,CAAgB,UAACO,OAAD;AAAA,eAAaA,OAAO,CAAClB,MAAR,KAAmBM,MAAM,CAACd,EAAvC;AAAA,OAAhB,CAAP;AACD;AANG,GAhDU;AAwDhB4B,EAAAA,OAAO,EAAE;AACPpB,IAAAA,MADO,kBACAM,MADA,EACQC,IADR,EACcC,GADd,EACmBC,IADnB,EACyB;AAC9B,aAAOlB,MAAK,CAAC0B,IAAN,CAAW,UAACL,IAAD;AAAA,eAAUA,IAAI,CAACpB,EAAL,KAAYc,MAAM,CAACN,MAA7B;AAAA,OAAX,CAAP;AACD,KAHM;AAIPE,IAAAA,IAJO,gBAIFI,MAJE,EAIMC,IAJN,EAIYc,EAJZ,EAIgBZ,IAJhB,EAIsB;AAC3B,aAAOb,MAAK,CAACqB,IAAN,CAAW,UAACf,IAAD;AAAA,eAAUA,IAAI,CAACV,EAAL,KAAYc,MAAM,CAACJ,IAA7B;AAAA,OAAX,CAAP;AACD;AANM;AAxDO,CAAlB;AAkEA,IAAMoB,MAAM,GAAG,IAAIjC,YAAJ,CAAiB;AAC9Bc,EAAAA,QAAQ,EAARA,QAD8B;AAE9BC,EAAAA,SAAS,EAATA;AAF8B,CAAjB,CAAf;AAKAkB,MAAM,CAACC,MAAP,GAAgBC,IAAhB,CAAqB,gBAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAChCC,EAAAA,OAAO,CAACC,GAAR,wCAAkCF,GAAlC;AACD,CAFD",
      "sourceRoot": "/Users/joshuastevenson/Desktop/AllCode/JavaScript/GraphQl/Meed-course/graphQl-basics/src/",
      "sourcesContent": [
        "const { ApolloServer, gql } = require(\"apollo-server\");\n\n// DUMMY_DATA\nconst users = [\n  { id: \"1\", name: \"Joshua\", email: \"joshua@example.com\", age: 103 },\n  { id: \"2\", name: \"Jerry\", email: \"jerry@example.com\", age: 35 },\n  { id: \"3\", name: \"Sarah\", email: \"sarah@example.com\", age: 27 },\n];\nconst posts = [\n  {\n    id: \"1\",\n    title: \"Secret first blog post... shhhhh\",\n    body: \"blablabla\",\n    published: true,\n    author: \"1\",\n  },\n  {\n    id: \"2\",\n    title: \"Blog post the first\",\n    body: \"WAwawawawa\",\n    published: false,\n    author: \"1\",\n  },\n  {\n    id: \"3\",\n    title: \"The second coming\",\n    body: \"WOOOOHOOOOOO!!!!!!!\",\n    published: true,\n    author: \"3\",\n  },\n];\n\nconst comments = [\n  { id: 1, body: \"Yo, first comment!\", author: \"1\", post: \"1\" },\n  { id: 2, body: \"This is awesome\", author: \"2\", post: \"3\" },\n  { id: 3, body: \"What a time to be alive\", author: \"2\", post: \"3\" },\n  {\n    id: 4,\n    body: \"yo, lets have a party up in gere lol ;)\",\n    author: \"3\",\n    post: \"1\",\n  },\n];\n\n// The GraphQL schema\nconst typeDefs = gql`\n  type Query {\n    users(query: String): [User!]!\n    posts(query: String): [Post!]!\n    comments: [Comment!]!\n    me: User!\n    post: Post!\n  }\n\n  type User {\n    id: ID!\n    name: String!\n    email: String!\n    age: Int\n    posts: [Post!]!\n    comments: [Comment]!\n  }\n\n  type Post {\n    id: ID!\n    title: String!\n    body: String!\n    published: Boolean!\n    author: User!\n    comments: [Comment!]!\n  }\n\n  type Comment {\n    id: ID!\n    body: String!\n    author: User!\n    post: Post!\n  }\n`;\n\n// A map of functions which return data for the schema.\nconst resolvers = {\n  Query: {\n    users(parent, args, ctx, info) {\n      if (!args.query) {\n        return users;\n      }\n      return users.filter((user) =>\n        user.name.toLowerCase().includes(args.query.toLowerCase())\n      );\n    },\n    posts(parent, args, ctx, info) {\n      if (!args.query) {\n        return posts;\n      }\n      return posts.filter(\n        (post) =>\n          post.title.toLowerCase().includes(args.query) ||\n          post.body.toLowerCase().includes(args.query)\n      );\n    },\n    comments(parent, args, ctx, info) {\n      return comments;\n    },\n    me() {\n      return {\n        id: \"123908\",\n        name: \"Mike\",\n        email: \"mike@example.com\",\n      };\n    },\n    post() {\n      return {\n        id: \"123\",\n        title: \"How I fell in love with a gorilla\",\n        body:\n          \"It was a cool night on the congo when my eyes locked with the beast...\",\n        published: false,\n      };\n    },\n  },\n  Post: {\n    author(parent, args, ctx, info) {\n      return users.find((user) => user.id === parent.author);\n    },\n    comments(parent, args, ctx, info) {\n      return comments.filter((comment) => comment.post === parent.id);\n    },\n  },\n  User: {\n    posts(parent, args, ctx, info) {\n      return posts.filter((post) => post.author === parent.id);\n    },\n    comments(parent, args, ctx, info) {\n      return comments.filter((comment) => comment.author === parent.id);\n    },\n  },\n  Comment: {\n    author(parent, args, ctx, info) {\n      return users.find((user) => user.id === parent.author);\n    },\n    post(parent, args, tx, info) {\n      return posts.find((post) => post.id === parent.post);\n    },\n  },\n};\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nserver.listen().then(({ url }) => {\n  console.log(`🚀 Server ready at ${url}`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1593105617568
  }
}