const { gql } = require("apollo-server");
const typeDefs = gql`
  type Query {
    users(query: String): [User!]!
    posts(query: String): [Post!]!
    comments: [Comment!]!
    me: User!
    post: Post!
  }
  type Mutation {
    createUser(data: CreateUserInput): User!
    deleteUser(id: ID!): User!
    updateUser(id: ID!, data: UpdateUserInput): User!
    createPost(data: CreatePost): Post!
    updatePost(id: ID!, data: updatePostInput): Post!
    deletePost(id: ID!): Post!
    createComment(data: CreateComment): Comment!
    updateComment(id: ID!, data: UpdateCommentInput): Comment!
    deleteComment(id: ID!): Comment!
  }
  input CreateUserInput {
    name: String!
    email: String!
    age: Int
  }
  input UpdateUserInput {
    name: String,
    email: String
    age: Int
  }

  input CreatePost {
    title: String!
    body: String!
    published: Boolean!
    author: ID!
  }
  input updatePostInput {
    title: String,
    body: String,
    published: Boolean,
  }

  input CreateComment {
    body: String!
    author: ID!
    post: ID!
  }
  input UpdateCommentInput {
    body: String
  }

  type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    posts: [Post!]!
    comments: [Comment]!
  }

  type Post {
    id: ID!
    title: String!
    body: String!
    published: Boolean!
    author: User!
    comments: [Comment!]!
  }

  type Comment {
    id: ID!
    body: String!
    author: User!
    post: Post!
  }
`;

module.exports = typeDefs;